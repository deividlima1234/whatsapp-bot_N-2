require('dotenv').config();
const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode');
const fetch = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args));

const API_URL = process.env.API_URL;
const API_KEY = process.env.API_KEY;

if (!API_KEY || !API_URL) {
    console.error("‚ùå ERROR: API_KEY o API_URL no est√°n configuradas.");
    process.exit(1);
}

const historialChats = {};

const client = new Client({
    puppeteer: { args: ["--no-sandbox", "--disable-setuid-sandbox"] },
    authStrategy: new LocalAuth()
});

client.on('qr', async qr => {
    console.log("üì± Escanea este c√≥digo QR para iniciar sesi√≥n:");
    console.log(await qrcode.toString(qr, { type: 'terminal', small: true }));
});

client.on('ready', () => console.log('‚úÖ Bot de WhatsApp est√° listo!'));

client.on('message', async message => {
    console.log(`üì© Mensaje recibido de ${message.from}: ${message.body}`);

    if (!historialChats[message.from]) {
        historialChats[message.from] = [];
    }
    historialChats[message.from].push(message.body);
    if (historialChats[message.from].length > 10) {
        historialChats[message.from].shift();
    }

    let respuesta = obtenerInformacionEmpresa(message.body.toLowerCase()) || await obtenerRespuestaIA(message.from);

    console.log(`ü§ñ Respuesta de Eddam: ${respuesta}`);
    message.reply(respuesta || "‚ö†Ô∏è No entend√≠, dime de otra forma.");
});

const respuestas = {
    "1": "üìã *Informaci√≥n de WaCRM*\nüîó [Ver m√°s detalles](https://codecanyon.net/item/wasender-bulk-whatsapp-sender-group-sender-wahtsapp-bot/35762285)\n\n‚úÖ *Filtros de Chat*\n‚úÖ *Transmisi√≥n*\n‚úÖ *Bot con Respuesta Autom√°tica*\n‚úÖ *Guardia de Grupo*\n‚úÖ *Horario*\n‚úÖ *Recordatorio*\n‚úÖ *Extractor de datos*\n‚úÖ *Utilidades del grupo*\n‚úÖ *Herramientas*",
    "2": "üì© *Informaci√≥n de WaSender*\n‚úÖ Env√≠os con fotos, videos y documentos\n‚úÖ Calentador de cuentas\n‚úÖ M√∫ltiples cuentas de WhatsApp\n‚úÖ Filtro de N√∫meros y Anti-Bloqueos\n‚úÖ Publicaci√≥n en grupos masivos\n‚úÖ Capturador de contactos de Google Maps",
    "3": "ü§ñ *ZapTech (SuperWasap)*\n‚úÖ ChatBot con IA\n‚úÖ Env√≠os masivos avanzados\n‚úÖ Multicuenta/multiagente\n‚úÖ Calentador comunitario",
    "hola": "üëã ¬°Hola! Bienvenido a *Tecno Digital Per√∫ EIRL*.\nSoy Eddam, tu asistente virtual. üòä\n\nOfrecemos soluciones tecnol√≥gicas para empresas y particulares. ¬øEn qu√© puedo ayudarte hoy?\n\nüîπ *1. Informaci√≥n sobre WaCRM*\nüîπ *2. Informaci√≥n sobre WaSender*\nüîπ *3. Informaci√≥n sobre ZapTech (SuperWasap)*\n\nPor favor, responde con el *n√∫mero* o escribe una *palabra clave* para obtener informaci√≥n detallada.\nEstoy aqu√≠ para ayudarte. üöÄ"
};

function obtenerInformacionEmpresa(mensaje) {
    for (const [clave, respuesta] of Object.entries(respuestas)) {
        if (mensaje.includes(clave)) {
            return respuesta;
        }
    }
    return null;
}

async function obtenerRespuestaIA(chatId) {
    try {
        const historial = historialChats[chatId] || [];
        const prompt = `Eres Eddam, el asistente virtual de Tecno Digital Per√∫ EIRL. Responde de manera profesional y amigable.`;

        const mensajesIA = [{ role: "user", parts: [{ text: prompt }] }]
            .concat(historial.map(msg => ({ role: "user", parts: [{ text: msg }] })));

        const response = await fetch(`${API_URL}?key=${API_KEY}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ contents: mensajesIA })
        });

        if (!response.ok) {
            throw new Error(`Error de API: ${response.status} ${response.statusText}`);
        }

        const data = await response.json();
        let respuesta = data?.candidates?.[0]?.content?.parts?.[0]?.text || "‚ö†Ô∏è No recib√≠ respuesta.";
        return respuesta.length > 200 ? respuesta.slice(0, 200) + "..." : respuesta;
    } catch (error) {
        console.error("‚ùå Error con Google Gemini:", error);
        return "‚ùå Error al conectar con la IA.";
    }
}

client.initialize();
